name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - name: Build and Publish for Linux
        run: dotnet publish -c Release -r linux-x64 --self-contained true -o ./publish/linux

      - name: Package Linux Artifact
        run: |
          zip -r "START_${{ github.ref_name }}_Linux.zip" publish/linux

      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v3
        with:
          name: linux-artifact
          path: "START_${{ github.ref_name }}_Linux.zip"

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - name: Build and Publish for Windows Installer
        run: |
          dotnet publish -c Release -r win-x64 --self-contained true -o ./publish/installer
          powershell -Command "Compress-Archive -Path publish/installer/* -DestinationPath 'START_${{ github.ref_name }}_Windows_Installer.zip'"

      - name: Build and Publish for Windows Portable
        run: |
          dotnet publish -c Release -r win-x64 --self-contained true -o ./publish/portable
          powershell -Command "Compress-Archive -Path publish/portable/* -DestinationPath 'START_${{ github.ref_name }}_Windows_Portable.zip'"

      - name: Upload Windows Installer Artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows-installer
          path: "START_${{ github.ref_name }}_Windows_Installer.zip"

      - name: Upload Windows Portable Artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows-portable
          path: "START_${{ github.ref_name }}_Windows_Portable.zip"

  create-release:
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Linux Artifact
        uses: actions/download-artifact@v3
        with:
          name: linux-artifact

      - name: Download Windows Installer Artifact
        uses: actions/download-artifact@v3
        with:
          name: windows-installer

      - name: Download Windows Portable Artifact
        uses: actions/download-artifact@v3
        with:
          name: windows-portable

      - name: Create Source Code Archives
        run: |
          zip -r source.zip .
          tar -czvf source.tar.gz .

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Linux Artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "START_${{ github.ref_name }}_Linux.zip"
          asset_name: "START_${{ github.ref_name }}_Linux.zip"
          asset_content_type: application/zip

      - name: Upload Windows Installer Artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "START_${{ github.ref_name }}_Windows_Installer.zip"
          asset_name: "START_${{ github.ref_name }}_Windows_Installer.zip"
          asset_content_type: application/zip

      - name: Upload Windows Portable Artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "START_${{ github.ref_name }}_Windows_Portable.zip"
          asset_name: "START_${{ github.ref_name }}_Windows_Portable.zip"
          asset_content_type: application/zip

      - name: Upload Source Code (zip) to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: source.zip
          asset_name: "Source_code.zip"
          asset_content_type: application/zip

      - name: Upload Source Code (tar.gz) to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: source.tar.gz
          asset_name: "Source_code.tar.gz"
          asset_content_type: application/gzip
